import { colors, debounce } from "../../utils/utils.js";

class {
    onInput(input) {
        this.state = {
            colors: colors,
            menuOpen: false,
        };
    }

    searchEvent = debounce(function() {
        this.emit("search-event")
    }, 500)

    static onSearchChange(e) {
        if (e.target.value) {
            this.emit("query-change", {
                query: e.target.value
            });
            this.searchEvent();
        }
    }

    static onColorChange(e) {
        this.state.menuOpen = false;
        this.emit("query-change", {
            color: colors[e.target.value]
        });
        this.searchEvent()
    }
}

<div#container>
    <div.search-box>
        <input.search-form-input
            type="search"
            name="search"
            placeholder="Search"
            value=input.query
            onInput("onSearchChange")
        >
        <details.dropdown#dropdown open=state.menuOpen>
            <summary.dropdown-button>
                <span.selected-item#selected-item>${input.color.name}</span>
            </summary>
            <div.dropdown-menu>
                <div.dropdown-menu-header>Color</div>
                <div.dropdown-menu-list>
                    <for|color, index| of=state.colors>
                        <label.dropdown-menu-item key=index>
                            <input
                                type="radio"
                                name="item"
                                value=index
                                onClick("onColorChange")
                                checked=(input.color.name === color.name)
                            >
                            <span>${color.name}</span>
                        </label>
                    </for>
                </div>
            </div>
        </details>
    </div>
</div>
